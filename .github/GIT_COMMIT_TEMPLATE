#[#{Github이슈번호}][{태그}][{태그}] 커밋 메시지 제목, 적용되었을 때의 효과를 중심으로, 최대 72자
#  - 수정이유: 이 커밋이 왜 일어났으며, 무엇을 하기 위한 커밋인지
#  - 수정내용: 무엇을 수정하였는지 한줄 요약
#  - 세부내용: 선택사항, 기타 세부내용
#
# |<->|<----------      되도록 50자 이내로 작성해주세요    ----------->|
#
# --------------------
# 커밋 메시지 예시:
# [#55][INFRA][DOC] 커밋 메시지 자동적용을 위한 파일 추가 및 가이드 문서 업데이트
#   - 수정이유: 커밋 메시지만으로 프로젝트 흐름 및 이슈와의 연결을 알 수 있도록
#   - 수정내용: `.github/GIT_COMMIT_TEMPLATE` 추가, `README.md` 내용 추가/수정
#   - 세부내용: Github 차원에서 커밋메시지를 강제할 수 있는 수단이 없으므로, 작업자 Git의 기본 세팅을 바꿔주어야 함
# --------------------
#
# --------------------
# 태그:
#    FEATURE  (서비스 새로운 기능)
#    FIX      (서비스 버그 수정)
#    REFACTOR (리팩토링 코드, 코드 동작 최적화)
#    STYLE    (빠진 세미콜론 수정, 코드 스타일 등; 코드 동작과는 무관)
#    DOC      (문서 수정)
#    TEST     (테스트용 리팩토링 코드 추가 및 수정; 서비스 프로덕션 코드에는 영향없음)
#    VERSION  (각종 버전 충돌/수정/새 버전 릴리즈; 서비스 프로덕션 코드에는 영향없음)
#    DEBUG    (디버깅용 코드/프레임워크 추가 혹은 수정; 서비스 프로덕션 코드에는 영향없음)
#    HACK     (임시로 어떻게 문제를 고침; 이 코드는 머지 등을 피해주세요)
#    WIP      (Work In Progress; 작업량이 많아져서, 진행관리를 위해 중간 커밋함)
#    INFRA    (CI/CD 세팅 혹은 프로젝트 관리용 코드 추가 또는 수정) 
# --------------------
#
# --------------------
# 내용 작성 가이드: 
#   * 내용은 한글 또는 영문 대문자로만 작성하세요
#   * 제목 끝에 . 을 적지 마세요
#   * 제목 다음 한 줄은 비우세요
#   * 제목은 강경하고 확실한 어조로, 영문일 경우는 명령문으로 작성하세요
#   * 제목에 기간을 적지 마세요
#   * 빈 줄을 작성하지 마세요
#   * 세부내용을 적을 땐, '왜'와 '무엇'을 중심으로 작성하세요('어떻게'는 지양해주세요)
# --------------------

